# -*- coding: utf-8 -*-
"""Untitled6.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1pBdcpP_HUiHB25Qcqa7PmtpsO88MTXaf
"""

import pandas as pd
import numpy as np
from sklearn.preprocessing import StandardScaler
from sklearn.model_selection import train_test_split
from sklearn import svm
from sklearn.metrics import accuracy_score

"""Data Collection and Analysis

PIMA Diabetes Dataset
"""

diabetes_dataset = pd.read_csv('diabetes.csv')

diabetes_dataset['Outcome'].value_counts()

diabetes_dataset.groupby('Outcome').mean()

#Separating the data and labels
X = diabetes_dataset.drop(columns = 'Outcome',axis=1)
Y= diabetes_dataset['Outcome']

#Data Standardization
scaler =StandardScaler()

scaler.fit(X)

standardized_data =scaler.transform(X)

print(standardized_data)

X = standardized_data
Y = diabetes_dataset['Outcome']

#Train Test Split
X_train, X_test, Y_train, Y_test = train_test_split(X,Y, test_size= 0.2, stratify=Y,random_state=2 )

print(X.shape,X_train.shape,X_test.shape)

#Training the model
classifier = svm.SVC(kernel='linear')

classifier.fit(X_train,Y_train)

#Model evaluation
#accuracy score

X_train_prediction = classifier.predict(X_train)
training_data_accuracy = accuracy_score(X_train_prediction,Y_train)

print('Accuracy score of the training data : ',training_data_accuracy)

#accuracy score on the test data
X_test_prediction = classifier.predict(X_test)
test_data_accuracy = accuracy_score(X_train_prediction,Y_train)

print(('Accuracy score of the testing data : ',test_data_accuracy))

#Making Predictions

input_data = (4,110,92,0,0,37.6,0.191,30)

input_data_as_numpy_array = np.asarray(input_data)

#reshapping
input_data_reshaped = input_data_as_numpy_array.reshape(1,-1)

#standardize the input data
std_data = scaler.transform(input_data_reshaped)

prediction = classifier.predict(std_data)

if (prediction[0]==0):
  print("Person is Not affected with Diabetes")
else:
  print("Person is affected with Diabetes")

